00000000: 7061 636b 6167 6520 636f 6d2e 6d68 632e  package com.mhc.
00000010: 7465 7374 3b0a 0a69 6d70 6f72 7420 6a61  test;..import ja
00000020: 7661 2e75 7469 6c2e 636f 6e63 7572 7265  va.util.concurre
00000030: 6e74 2e41 7272 6179 426c 6f63 6b69 6e67  nt.ArrayBlocking
00000040: 5175 6575 653b 0a69 6d70 6f72 7420 6a61  Queue;.import ja
00000050: 7661 2e75 7469 6c2e 636f 6e63 7572 7265  va.util.concurre
00000060: 6e74 2e43 6f75 6e74 446f 776e 4c61 7463  nt.CountDownLatc
00000070: 683b 0a69 6d70 6f72 7420 6a61 7661 2e75  h;.import java.u
00000080: 7469 6c2e 636f 6e63 7572 7265 6e74 2e54  til.concurrent.T
00000090: 6872 6561 6450 6f6f 6c45 7865 6375 746f  hreadPoolExecuto
000000a0: 723b 0a69 6d70 6f72 7420 6a61 7661 2e75  r;.import java.u
000000b0: 7469 6c2e 636f 6e63 7572 7265 6e74 2e54  til.concurrent.T
000000c0: 696d 6555 6e69 743b 0a69 6d70 6f72 7420  imeUnit;.import 
000000d0: 6a61 7661 2e75 7469 6c2e 636f 6e63 7572  java.util.concur
000000e0: 7265 6e74 2e6c 6f63 6b73 2e52 6565 6e74  rent.locks.Reent
000000f0: 7261 6e74 4c6f 636b 3b0a 0a2f 2a2a 0a20  rantLock;../**. 
00000100: 2a20 4061 7574 686f 7220 efbc 9a6d 656e  * @author ...men
00000110: 6768 7569 2e63 616f 2c20 6d65 6e67 6875  ghui.cao, menghu
00000120: 692e 6361 6f40 6c65 7961 6e74 6563 682e  i.cao@leyantech.
00000130: 636f 6d0a 202a 2040 6461 7465 20ef bc9a  com. * @date ...
00000140: 3230 3230 2d30 372d 3032 2031 303a 3538  2020-07-02 10:58
00000150: 0a20 2a2f 0a70 7562 6c69 6320 636c 6173  . */.public clas
00000160: 7320 4c6f 636b 5465 7374 207b 0a0a 2020  s LockTest {..  
00000170: 2076 6f6c 6174 696c 6520 496e 7465 6765   volatile Intege
00000180: 7220 636f 756e 7420 3d20 3130 3b0a 0a20  r count = 10;.. 
00000190: 2070 7562 6c69 6320 7374 6174 6963 2076   public static v
000001a0: 6f69 6420 6d61 696e 2853 7472 696e 675b  oid main(String[
000001b0: 5d20 6172 6773 2920 7b0a 0a20 2020 204c  ] args) {..    L
000001c0: 6f63 6b54 6573 7420 6c6f 636b 5465 7374  ockTest lockTest
000001d0: 203d 206e 6577 204c 6f63 6b54 6573 7428   = new LockTest(
000001e0: 293b 0a0a 2020 2020 6c6f 636b 5465 7374  );..    lockTest
000001f0: 2e74 6573 7452 6565 6e74 7261 6e74 4c6f  .testReentrantLo
00000200: 636b 2829 3b0a 0a20 2020 206c 6f63 6b54  ck();..    lockT
00000210: 6573 742e 7465 7374 5379 6e63 6872 6f69  est.testSynchroi
00000220: 7a65 6428 293b 0a0a 2020 2020 6c6f 636b  zed();..    lock
00000230: 5465 7374 2e74 6573 7456 6f6c 6961 7465  Test.testVoliate
00000240: 2829 3b0a 0a20 207d 0a0a 2020 7075 626c  ();..  }..  publ
00000250: 6963 2020 766f 6964 2074 6573 7456 6f6c  ic  void testVol
00000260: 6961 7465 2829 207b 0a20 2020 2043 6f75  iate() {.    Cou
00000270: 6e74 446f 776e 4c61 7463 6820 636f 756e  ntDownLatch coun
00000280: 7444 6f77 6e4c 6174 6368 203d 206e 6577  tDownLatch = new
00000290: 2043 6f75 6e74 446f 776e 4c61 7463 6828   CountDownLatch(
000002a0: 3230 293b 0a20 2020 2041 7272 6179 426c  20);.    ArrayBl
000002b0: 6f63 6b69 6e67 5175 6575 6520 6172 7261  ockingQueue arra
000002c0: 7942 6c6f 636b 696e 6751 7565 7565 203d  yBlockingQueue =
000002d0: 206e 6577 2041 7272 6179 426c 6f63 6b69   new ArrayBlocki
000002e0: 6e67 5175 6575 6528 3530 293b 0a20 2020  ngQueue(50);.   
000002f0: 2054 6872 6561 6450 6f6f 6c45 7865 6375   ThreadPoolExecu
00000300: 746f 7220 7468 7265 6164 506f 6f6c 4578  tor threadPoolEx
00000310: 6563 7574 6f72 203d 206e 6577 2054 6872  ecutor = new Thr
00000320: 6561 6450 6f6f 6c45 7865 6375 746f 7228  eadPoolExecutor(
00000330: 3230 2c20 3230 2c20 3130 2c20 5469 6d65  20, 20, 10, Time
00000340: 556e 6974 2e53 4543 4f4e 4453 2c0a 2020  Unit.SECONDS,.  
00000350: 2020 2020 2020 6172 7261 7942 6c6f 636b        arrayBlock
00000360: 696e 6751 7565 7565 293b 0a0a 2020 2020  ingQueue);..    
00000370: 666f 7220 2869 6e74 2069 203d 2030 3b20  for (int i = 0; 
00000380: 6920 3c20 3230 3b20 692b 2b29 207b 0a20  i < 20; i++) {. 
00000390: 2020 2020 2074 6872 6561 6450 6f6f 6c45       threadPoolE
000003a0: 7865 6375 746f 722e 7375 626d 6974 2828  xecutor.submit((
000003b0: 2920 2d3e 207b 0a20 2020 2020 2020 2074  ) -> {.        t
000003c0: 7279 207b 0a20 2020 2020 2020 2020 2063  ry {.          c
000003d0: 6f75 6e74 446f 776e 4c61 7463 682e 636f  ountDownLatch.co
000003e0: 756e 7444 6f77 6e28 293b 0a20 2020 2020  untDown();.     
000003f0: 2020 2020 2053 7973 7465 6d2e 6f75 742e       System.out.
00000400: 7072 696e 746c 6e28 5468 7265 6164 2e63  println(Thread.c
00000410: 7572 7265 6e74 5468 7265 6164 2829 2e67  urrentThread().g
00000420: 6574 4e61 6d65 2829 202b 2220 2d31 206e  etName() +" -1 n
00000430: 6f77 3a22 202b 2063 6f75 6e74 446f 776e  ow:" + countDown
00000440: 4c61 7463 682e 6765 7443 6f75 6e74 2829  Latch.getCount()
00000450: 293b 0a20 2020 2020 2020 2020 2063 6f75  );.          cou
00000460: 6e74 446f 776e 4c61 7463 682e 6177 6169  ntDownLatch.awai
00000470: 7428 293b 0a20 2020 2020 2020 2020 2063  t();.          c
00000480: 6f75 6e74 2b2b 3b0a 2020 2020 2020 2020  ount++;.        
00000490: 2020 5379 7374 656d 2e6f 7574 2e70 7269    System.out.pri
000004a0: 6e74 6c6e 2854 6872 6561 642e 6375 7272  ntln(Thread.curr
000004b0: 656e 7454 6872 6561 6428 292e 6765 744e  entThread().getN
000004c0: 616d 6528 2920 2b20 223a 2220 2b20 636f  ame() + ":" + co
000004d0: 756e 7429 3b0a 2020 2020 2020 2020 7d20  unt);.        } 
000004e0: 6361 7463 6820 2845 7863 6570 7469 6f6e  catch (Exception
000004f0: 2065 2920 7b0a 2020 2020 2020 2020 2020   e) {.          
00000500: 652e 7072 696e 7453 7461 636b 5472 6163  e.printStackTrac
00000510: 6528 293b 0a20 2020 2020 2020 207d 0a20  e();.        }. 
00000520: 2020 2020 207d 293b 0a20 2020 207d 0a20       });.    }. 
00000530: 207d 0a0a 2020 7075 626c 6963 2020 766f   }..  public  vo
00000540: 6964 2074 6573 7453 796e 6368 726f 697a  id testSynchroiz
00000550: 6564 2829 207b 0a20 2020 204f 626a 6563  ed() {.    Objec
00000560: 7420 6f20 3d20 6e65 7720 4f62 6a65 6374  t o = new Object
00000570: 2829 3b0a 2020 2020 7379 6e63 6872 6f6e  ();.    synchron
00000580: 697a 6564 2028 6f29 207b 0a20 2020 2020  ized (o) {.     
00000590: 2053 7973 7465 6d2e 6f75 742e 7072 696e   System.out.prin
000005a0: 746c 6e28 2273 796e 6368 726f 6e69 7a65  tln("synchronize
000005b0: 6420 3120 7375 6363 6573 7322 293b 0a20  d 1 success");. 
000005c0: 2020 2020 2073 796e 6368 726f 6e69 7a65       synchronize
000005d0: 6420 286f 2920 7b0a 2020 2020 2020 2020  d (o) {.        
000005e0: 5379 7374 656d 2e6f 7574 2e70 7269 6e74  System.out.print
000005f0: 6c6e 2822 7379 6e63 6872 6f6e 697a 6564  ln("synchronized
00000600: 2032 2073 7563 6365 7373 2229 3b0a 2020   2 success");.  
00000610: 2020 2020 7d0a 2020 2020 7d0a 2020 2020      }.    }.    
00000620: 5379 7374 656d 2e6f 7574 2e70 7269 6e74  System.out.print
00000630: 6c6e 2822 7379 6e63 6872 6f6e 697a 6564  ln("synchronized
00000640: 2065 6e64 2022 293b 0a20 207d 0a0a 2020   end ");.  }..  
00000650: 7075 626c 6963 2020 766f 6964 2074 6573  public  void tes
00000660: 7452 6565 6e74 7261 6e74 4c6f 636b 2829  tReentrantLock()
00000670: 207b 0a20 2020 2052 6565 6e74 7261 6e74   {.    Reentrant
00000680: 4c6f 636b 2072 6565 6e74 7261 6e74 4c6f  Lock reentrantLo
00000690: 636b 203d 206e 6577 2052 6565 6e74 7261  ck = new Reentra
000006a0: 6e74 4c6f 636b 2829 3b0a 2020 2020 6966  ntLock();.    if
000006b0: 2028 7265 656e 7472 616e 744c 6f63 6b2e   (reentrantLock.
000006c0: 7472 794c 6f63 6b28 2929 207b 0a20 2020  tryLock()) {.   
000006d0: 2020 2053 7973 7465 6d2e 6f75 742e 7072     System.out.pr
000006e0: 696e 746c 6e28 2272 6565 6e74 7261 6e74  intln("reentrant
000006f0: 4c6f 636b 206c 6f63 6b20 3120 7375 6363  Lock lock 1 succ
00000700: 6573 7322 293b 0a20 2020 2020 2053 7973  ess");.      Sys
00000710: 7465 6d2e 6f75 742e 7072 696e 746c 6e28  tem.out.println(
00000720: 7265 656e 7472 616e 744c 6f63 6b2e 6973  reentrantLock.is
00000730: 4c6f 636b 6564 2829 293b 0a20 2020 2020  Locked());.     
00000740: 2069 6620 2872 6565 6e74 7261 6e74 4c6f   if (reentrantLo
00000750: 636b 2e74 7279 4c6f 636b 2829 2920 7b0a  ck.tryLock()) {.
00000760: 2020 2020 2020 2020 5379 7374 656d 2e6f          System.o
00000770: 7574 2e70 7269 6e74 6c6e 2822 7265 656e  ut.println("reen
00000780: 7472 616e 744c 6f63 6b20 6c6f 636b 2032  trantLock lock 2
00000790: 2073 7563 6365 7373 2229 3b0a 2020 2020   success");.    
000007a0: 2020 2020 5379 7374 656d 2e6f 7574 2e70      System.out.p
000007b0: 7269 6e74 6c6e 2872 6565 6e74 7261 6e74  rintln(reentrant
000007c0: 4c6f 636b 2e69 734c 6f63 6b65 6428 2929  Lock.isLocked())
000007d0: 3b0a 2020 2020 2020 7d0a 2020 2020 7d0a  ;.      }.    }.
000007e0: 2020 2020 7265 656e 7472 616e 744c 6f63      reentrantLoc
000007f0: 6b2e 756e 6c6f 636b 2829 3b0a 2020 2020  k.unlock();.    
00000800: 5379 7374 656d 2e6f 7574 2e70 7269 6e74  System.out.print
00000810: 6c6e 2822 7265 656e 7472 616e 744c 6f63  ln("reentrantLoc
00000820: 6b20 756e 6c6f 636b 2073 7563 6365 7373  k unlock success
00000830: 2229 3b0a 2020 7d0a 0a7d 0a              ");.  }..}.
