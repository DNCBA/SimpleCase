/*
 * This file is generated by jOOQ.
 */
package com.mhc.jooq.codegen.tables;


import com.mhc.jooq.codegen.Indexes;
import com.mhc.jooq.codegen.Keys;
import com.mhc.jooq.codegen.Marketing;
import com.mhc.jooq.codegen.tables.records.MarketingTaskDescriptorRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row22;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarketingTaskDescriptor extends TableImpl<MarketingTaskDescriptorRecord> {

    private static final long serialVersionUID = -956276486;

    /**
     * The reference instance of <code>marketing.marketing_task_descriptor</code>
     */
    public static final MarketingTaskDescriptor MARKETING_TASK_DESCRIPTOR = new MarketingTaskDescriptor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MarketingTaskDescriptorRecord> getRecordType() {
        return MarketingTaskDescriptorRecord.class;
    }

    /**
     * The column <code>marketing.marketing_task_descriptor.id</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.plan_id</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> PLAN_ID = createField(DSL.name("plan_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.name</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.user_group_id</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> USER_GROUP_ID = createField(DSL.name("user_group_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.condition_group_id</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> CONDITION_GROUP_ID = createField(DSL.name("condition_group_id"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.rule_type</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> RULE_TYPE = createField(DSL.name("rule_type"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.policy_id</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> POLICY_ID = createField(DSL.name("policy_id"), org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.order_status</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> ORDER_STATUS = createField(DSL.name("order_status"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.refund_status</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> REFUND_STATUS = createField(DSL.name("refund_status"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.status</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.assistant_group_id</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> ASSISTANT_GROUP_ID = createField(DSL.name("assistant_group_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.cover_people</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, Integer> COVER_PEOPLE = createField(DSL.name("cover_people"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.exec_time_ms</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, Long> EXEC_TIME_MS = createField(DSL.name("exec_time_ms"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.update_by</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> UPDATE_BY = createField(DSL.name("update_by"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.update_time_ms</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, Long> UPDATE_TIME_MS = createField(DSL.name("update_time_ms"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.finish_time_ms</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, Long> FINISH_TIME_MS = createField(DSL.name("finish_time_ms"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.end_time_ms</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, Long> END_TIME_MS = createField(DSL.name("end_time_ms"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.cancel_reason</code>.
     */
    public final TableField<MarketingTaskDescriptorRecord, String> CANCEL_REASON = createField(DSL.name("cancel_reason"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>marketing.marketing_task_descriptor.task_type</code>. 任务类型(短信SMS/淘内TB)
     */
    public final TableField<MarketingTaskDescriptorRecord, String> TASK_TYPE = createField(DSL.name("task_type"), org.jooq.impl.SQLDataType.VARCHAR(150).defaultValue(org.jooq.impl.DSL.inline("TB", org.jooq.impl.SQLDataType.VARCHAR)), this, "任务类型(短信SMS/淘内TB)");

    /**
     * The column <code>marketing.marketing_task_descriptor.sms_filter</code>. 短信风控规则(n天内不能再发送)
     */
    public final TableField<MarketingTaskDescriptorRecord, Integer> SMS_FILTER = createField(DSL.name("sms_filter"), org.jooq.impl.SQLDataType.INTEGER, this, "短信风控规则(n天内不能再发送)");

    /**
     * The column <code>marketing.marketing_task_descriptor.tb_filter</code>. 淘宝风控规则(n天内不能再发送)
     */
    public final TableField<MarketingTaskDescriptorRecord, Integer> TB_FILTER = createField(DSL.name("tb_filter"), org.jooq.impl.SQLDataType.INTEGER, this, "淘宝风控规则(n天内不能再发送)");

    /**
     * The column <code>marketing.marketing_task_descriptor.customer_id</code>. 客户号id
     */
    public final TableField<MarketingTaskDescriptorRecord, Integer> CUSTOMER_ID = createField(DSL.name("customer_id"), org.jooq.impl.SQLDataType.INTEGER, this, "客户号id");

    /**
     * Create a <code>marketing.marketing_task_descriptor</code> table reference
     */
    public MarketingTaskDescriptor() {
        this(DSL.name("marketing_task_descriptor"), null);
    }

    /**
     * Create an aliased <code>marketing.marketing_task_descriptor</code> table reference
     */
    public MarketingTaskDescriptor(String alias) {
        this(DSL.name(alias), MARKETING_TASK_DESCRIPTOR);
    }

    /**
     * Create an aliased <code>marketing.marketing_task_descriptor</code> table reference
     */
    public MarketingTaskDescriptor(Name alias) {
        this(alias, MARKETING_TASK_DESCRIPTOR);
    }

    private MarketingTaskDescriptor(Name alias, Table<MarketingTaskDescriptorRecord> aliased) {
        this(alias, aliased, null);
    }

    private MarketingTaskDescriptor(Name alias, Table<MarketingTaskDescriptorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> MarketingTaskDescriptor(Table<O> child, ForeignKey<O, MarketingTaskDescriptorRecord> key) {
        super(child, key, MARKETING_TASK_DESCRIPTOR);
    }

    @Override
    public Schema getSchema() {
        return Marketing.MARKETING;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.MARKETING_TASK_DESCRIPTOR_PRIMARY);
    }

    @Override
    public UniqueKey<MarketingTaskDescriptorRecord> getPrimaryKey() {
        return Keys.KEY_MARKETING_TASK_DESCRIPTOR_PRIMARY;
    }

    @Override
    public List<UniqueKey<MarketingTaskDescriptorRecord>> getKeys() {
        return Arrays.<UniqueKey<MarketingTaskDescriptorRecord>>asList(Keys.KEY_MARKETING_TASK_DESCRIPTOR_PRIMARY);
    }

    @Override
    public MarketingTaskDescriptor as(String alias) {
        return new MarketingTaskDescriptor(DSL.name(alias), this);
    }

    @Override
    public MarketingTaskDescriptor as(Name alias) {
        return new MarketingTaskDescriptor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MarketingTaskDescriptor rename(String name) {
        return new MarketingTaskDescriptor(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MarketingTaskDescriptor rename(Name name) {
        return new MarketingTaskDescriptor(name, null);
    }

    // -------------------------------------------------------------------------
    // Row22 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row22<String, String, String, String, String, String, String, String, String, String, String, Integer, Long, String, Long, Long, Long, String, String, Integer, Integer, Integer> fieldsRow() {
        return (Row22) super.fieldsRow();
    }
}
